name: Deploy Web Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - prod
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy Web App
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || inputs.environment || 'test' }}
    env:
      SERVICE_NAME: web-app
      DEPLOY_ENV: ${{ github.event.inputs.environment || inputs.environment || 'test' }}
      IMAGE_NAME: ${{ vars.GOOGLE_CLOUD_LOCATION }}-docker.pkg.dev/${{ vars.GOOGLE_CLOUD_PROJECT }}/veloryn/web-app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ vars.GOOGLE_CLOUD_PROJECT }}

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ vars.GOOGLE_CLOUD_LOCATION }}-docker.pkg.dev --quiet

    - name: Create build-time .env for Next.js
      run: |
        cd app
        echo "=== Environment: ${{ env.DEPLOY_ENV }} ==="
        echo "=== Checking environment variables ==="
        echo "GOOGLE_CLOUD_PROJECT: ${{ vars.GOOGLE_CLOUD_PROJECT }}"
        echo "GOOGLE_CLOUD_LOCATION: ${{ vars.GOOGLE_CLOUD_LOCATION }}"
        echo "FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY != '' && 'SET' || 'MISSING' }}"
        echo "FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL != '' && 'SET' || 'MISSING' }}"
        echo "FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY != '' && 'SET' || 'MISSING' }}"
        echo "STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY != '' && 'SET' || 'MISSING' }}"
        echo "STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY != '' && 'SET' || 'MISSING' }}"
        echo "=== Creating .env file ==="
        echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.GOOGLE_CLOUD_PROJECT }}" >> .env
        echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
        echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.GOOGLE_CLOUD_PROJECT }}.firebaseapp.com" >> .env
        echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.GOOGLE_CLOUD_PROJECT }}.firebasestorage.app" >> .env
        echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
        echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
        echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> .env
        echo "GOOGLE_CLOUD_PROJECT=${{ vars.GOOGLE_CLOUD_PROJECT }}" >> .env
        echo "FIREBASE_PROJECT_ID=${{ vars.GOOGLE_CLOUD_PROJECT }}" >> .env
        echo "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> .env
        echo "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> .env
        echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" >> .env
        echo "STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> .env

    - name: Build Docker image
      run: |
        ls -la
        cd app
        ls -la
        cat .env

        docker build . -t ${{ env.IMAGE_NAME }} -f Dockerfile

    - name: Push Docker image
      run: docker push ${{ env.IMAGE_NAME }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image ${{ env.IMAGE_NAME }} \
          --platform managed \
          --region ${{ vars.GOOGLE_CLOUD_LOCATION }} \
          --allow-unauthenticated \
          --port 3000 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances ${{ env.DEPLOY_ENV == 'prod' && '50' || '5' }} \
