name: Deploy Web Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - prod
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
  push:
    branches:
      - main
    paths:
      - 'app/**'

env:
  SERVICE_NAME: web-app
  REGION: ${{ env.GOOGLE_CLOUD_LOCATION }}

jobs:
  deploy:
    name: Deploy Web App
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || inputs.environment || 'test' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'app/package-lock.json'

    - name: Install dependencies
      run: |
        cd app
        npm ci

    - name: Build application
      run: |
        cd app
        npm run build

    - name: Create environment configuration
      run: |
        cd app
        cat > .env.yaml << EOF
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ env.GOOGLE_CLOUD_PROJECT }}
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ env.GOOGLE_CLOUD_PROJECT }}.firebaseapp.com
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ env.GOOGLE_CLOUD_PROJECT }}.firebasestorage.app
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        FIREBASE_PROJECT_ID: ${{ env.GOOGLE_CLOUD_PROJECT }}
        FIREBASE_CLIENT_EMAIL: ${{ env.FIREBASE_CLIENT_EMAIL }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
        EOF

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}

    - name: Deploy to Cloud Run
      run: |
        cd app
        
        echo "ðŸš€ Deploying Web Application..."
        echo "Service name: ${{ env.SERVICE_NAME }}"
        echo "Project: ${{ env.GOOGLE_CLOUD_PROJECT }}"
        
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --source . \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --port 3000 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances ${{ env.DEPLOY_ENV == 'prod' && '50' || '5' }} \
          --env-vars-file .env.yaml
